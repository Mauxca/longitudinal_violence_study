mutate(relation2 = RELATION2) %>%
mutate(relation3 = (RELSTAT3 != 1)) %>%
mutate(relation4 = (RELSTAT4 != 1)) %>%
mutate(relation5 = (RELSTAT5 != 1)) %>%
# religious preference L_2
mutate(religion1 = (RELINFL != 1)) %>% # 1 if religion has at least some
#influence on the way the subject choose to spend their time each day
mutate(religion2 = (RELINFL2 != 1)) %>%
mutate(religion3 = (RELINFL3 != 1)) %>%
mutate(religion4 = (RELINFL4 != 1)) %>%
mutate(religion5 = (RELINFL5 != 1)) %>%
# negative psychological quality L_3
mutate(psystress1 = PSYSTRES) %>% # continuous
mutate(psystress2 = PSYSTRS2) %>%
mutate(psystress3 = PSYSTRS3) %>%
mutate(psystress4 = PSYSTRS4) %>%
mutate(psystress5 = PSYSTRS5) %>%
# positive psychological quality L_4
mutate(psywell1 = PSYWELL) %>% # continuous
mutate(psywell2 = PSYWELL2) %>%
mutate(psywell3 = PSYWELL3) %>%
mutate(psywell4 = PSYWELL4) %>%
mutate(psywell5 = PSYWELL5) %>%
# number of women the respondent know who had been sexually victimized L_5
mutate(victfrnd1 = (VICTFRND != 1)) %>% # 1 for at least one, 0 for none
mutate(victfrnd2 = (VCTFRND2 != 1)) %>%
mutate(victfrnd3 = (VCTFRND3 != 1)) %>%
mutate(victfrnd4 = (VCTFRND4 != 1)) %>%
mutate(victfrnd5 = (NUMVICT5 != 1)) %>%
# drug use of the respondent L_6
mutate(drug1 = DRUG1) %>% # 1 for drug use, 0 for none
mutate(drug2 = DRUG2) %>%
mutate(drug3 = DRUG3) %>%
mutate(drug4 = DRUG4) %>%
mutate(drug5 = DRUG5) %>%
# alcohol use of the respondent L_7
mutate(alcohol1 = (DRNKFREQ != 1)) %>% # 1 for alcohol use, 0 for none
mutate(alcohol2 = (DRNKFRQ2 != 1)) %>%
mutate(alcohol3 = (DRNKFRQ3 != 1)) %>%
mutate(alcohol4 = (DRNKFRQ4 != 1)) %>%
mutate(alcohol5 = (DRNKFRQ5 != 1))
# export CSV file
SCM_nodes <- c("victim1", "victim2", "victim3", "victim4", "suicide1",
"suicide2", "suicide3", "suicide4", "suicide5", "Y", "race",
"sxorient", "consent", "forced", "forced_att", "sex_bef14",
"relation1", "relation2", "relation3", "relation4", "relation5",
"religion1", "religion2", "religion3", "religion4", "religion5",
#"psystress1", "psystress2", "psystress3", "psystress4",
#"psystress5",
"psywell1", "psywell2", "psywell3", "psywell4",
"psywell5", "victfrnd1", "victfrnd2", "victfrnd3", "victfrnd4",
"victfrnd5", "drug1", "drug2", "drug3", "drug4", "drug5",
"alcohol1", "alcohol2", "alcohol3", "alcohol4", "alcohol5")
female_SCM <- female_final[, c("CODENUM", "cohort", SCM_nodes)]
# impute based on the raw data, otherwise remove any individuals with missing
# value in the first survey
NA_sxorient <- which(is.na(female_data$SXORIENT))
NA_sxorient
female_data[NA_sxorient, c("SXORIEN2", "SXORIEN3", "SXORIEN4", "SXORIEN5")]
check <- female_data[NA_sxorient, c("SXORIEN2", "SXORIEN3", "SXORIEN4", "SXORIEN5")]
View(check)
apply(female_data[, c("SXORIEN2", "SXORIEN3", "SXORIEN4", "SXORIEN5")], 2, function(t){sum(is.na(t))})
apply(female_data[NA_sxorient, c("SXORIEN2", "SXORIEN3", "SXORIEN4", "SXORIEN5")], 2, function(t){sum(is.na(t))})
female_data[NA_sxorient, "SXORIENT"] <- female_data[NA_sxorient, "SXORIEN2"]
which(is.na(female_data$SXORIENT))
sum(is.na(female_data$SXORIENT))
length(NA_sxorient)
sum(is.na(female_data$RACE))
apply(female_SCM, 2, function(t){sum(is.na(t))})
# Female data
female_data <- read_por("../data/03212-0001-Data.por")
female_variable <- colnames(female_data)
length(grep(pattern = "^90-", female_data$CODENUM) )
length(grep(pattern = "^91-", female_data$CODENUM) )
female_new <- female_data %>%
mutate(victim1_bin = (COOCCURA != 1)) %>%
mutate(victim2_bin = (COOCCUR2 != 1)) %>%
mutate(victim3_bin = (COOCCUR3 != 1)) %>%
mutate(victim4_bin = (COOCCUR4 != 1)) %>%
mutate(SUICIDE1 = (SUICIDE != 1)) %>%
mutate(SUICIDE2 = (SUICIDE2 != 1)) %>%
mutate(SUICIDE3 = (SUICIDE3 != 1)) %>%
mutate(SUICIDE4 = (SUICIDE4 != 1)) %>% # 1 if suicidal, 0 if not
mutate(SUICIDE5 = (SUICIDE5 != 1)) %>%
# 1 if engaged or married, 0 if single or divorced
mutate(MARSTAT_bin = (MARSTAT == 3 | MARSTAT == 4)) %>%
# 1 if has religious belief, o.w. 0
mutate(RELIG_bin = (RELIG != 5)) %>%
# 1 if depressed, o.w. 0
mutate(DEPRESS1_bin = (DEPRESS != 1)) %>%
mutate(DEPRESS2_bin = (DEPRESS2 != 1)) %>%
mutate(DEPRESS3_bin = (DEPRESS3 != 1)) %>%
mutate(DEPRESS4_bin = (DEPRESS4 != 1)) %>%
mutate(DEPRESS5_bin = (DEPRESS5 != 1))
# add cohort
female_data[grep(pattern = "^90-", female_data$CODENUM), "COHORT"] <- 90
female_data[grep(pattern = "^91-", female_data$CODENUM), "COHORT"] <- 91
# relation status
relation2_90 <- which((female_data$COHORT == 90) & (female_data$MARSTAT2 != 1))
relation2_91 <- which((female_data$COHORT == 91) & (female_data$RELSTAT2 != 1))
no_relation2_90 <- which((female_data$COHORT == 90) & (female_data$MARSTAT2 == 1))
no_relation2_91 <- which((female_data$COHORT == 91) & (female_data$RELSTAT2 == 1))
RELATION2 <- rep(NA, nrow(female_data))
RELATION2[c(relation2_90, relation2_91)] <- 1
RELATION2[c(no_relation2_90, no_relation2_91)] <- 0
female_data <- cbind(female_data, RELATION2)
# sexual experience from age 14 to the present
# intercourse occurred
no_forced_sex <- female_data$SEXACTS == 1 & female_data$FORCESI == 1 &
female_data$PRESSSP == 1 & female_data$FORCESP == 1 & female_data$AUTHSP == 1 &
female_data$PRESSSI == 1 & female_data$AUTHSI == 1 & female_data$DRUGSI == 1
forced_sex <- female_data$SEXACTS == 2 | female_data$FORCESI == 2 |
female_data$PRESSSP == 2 | female_data$FORCESP == 2 | female_data$AUTHSP == 2 |
female_data$PRESSSI == 2 | female_data$AUTHSI == 2 | female_data$DRUGSI == 2
FSEX_AFT14 <- rep(NA, nrow(female_data))
FSEX_AFT14[no_forced_sex] <- 0
FSEX_AFT14[forced_sex] <- 1
female_data <- cbind(female_data, FSEX_AFT14)
# intercourse didnt occur
no_forced_sex_attempt <- female_data$ATTEMPT == 1 & female_data$DRUGATT == 1
forced_sex_attempt <- female_data$ATTEMPT == 2 | female_data$DRUGATT == 2
FSEXATT_AFT14 <- rep(NA, nrow(female_data))
FSEXATT_AFT14[no_forced_sex_attempt] <- 0
FSEXATT_AFT14[forced_sex_attempt] <- 1
female_data <- cbind(female_data, FSEXATT_AFT14)
# sexual experience prior to age 14
sex_bef14 <- female_data$SHOORGAN != 1 | female_data$FONDLED != 1 |
female_data$ATTEMPSI != 1 | female_data$SI != 1
no_sex_bef14 <- female_data$SHOORGAN == 1 & female_data$FONDLED == 1 &
female_data$ATTEMPSI == 1 & female_data$SI == 1
SEX_BEF14 <- rep(NA, nrow(female_data))
SEX_BEF14[no_sex_bef14] <- 0
SEX_BEF14[sex_bef14] <- 1
female_data <- cbind(female_data, SEX_BEF14)
# drug use including marijuana or other drugs of the respondent
DRUG1 <- female_data$MJFREQ != 1 | female_data$OTHERRX != 1 # 1 for drug use, 0 for none
DRUG2 <- female_data$MJFREQ2 != 1 | female_data$OTHERRX2 != 1
DRUG3 <- female_data$MJFREQ3 != 1 | female_data$OTHERRX3 != 1
DRUG4 <- female_data$MJFREQ4 != 1 | female_data$OTHERRX4 != 1
DRUG5 <- female_data$MJFREQ5 != 1 | female_data$OTHERRX5 != 1
female_data <- cbind(female_data, DRUG1, DRUG2, DRUG3, DRUG4, DRUG5)
# sexual orientation
NA_sxorient <- which(is.na(female_data$SXORIENT))
apply(female_data[NA_sxorient, c("SXORIEN2", "SXORIEN3", "SXORIEN4", "SXORIEN5")], 2,
function(t){sum(is.na(t))})
female_data[NA_sxorient, "SXORIENT"] <- female_data[NA_sxorient, "SXORIEN2"]
female_final <- female_data %>%
# cohort
mutate(cohort = COHORT) %>%
# add treatment intervention A
mutate(victim1 = (COOCCURA != 1)) %>%
mutate(victim2 = (COOCCUR2 != 1)) %>%
mutate(victim3 = (COOCCUR3 != 1)) %>%
mutate(victim4 = (COOCCUR4 != 1)) %>%
# add suicidal L10:
mutate(suicide1 = (SUICIDE != 1)) %>% # 1 if suicidal, 0 if not
mutate(suicide2 = (SUICIDE2 != 1)) %>%
mutate(suicide3 = (SUICIDE3 != 1)) %>%
mutate(suicide4 = (SUICIDE4 != 1)) %>%
mutate(suicide5 = (SUICIDE5 != 1)) %>%
# add outcome Y
mutate(Y = as.numeric(suicide2) + as.numeric(suicide3) +
as.numeric(suicide4) + as.numeric(suicide5)) %>%
# race W_1:
mutate(race = RACE) %>%
# sexual orientation W_2:
mutate(sxorient = (SXORIENT != 1)) %>% # 1 if bisexual/homosexual/not sure, 0 if heterosexual
# consent sex (age 14 - present) W:_3
mutate(consent = CONSENT) %>%
# forced sex (age 14 - present) W_4:
mutate(forced = FSEX_AFT14) %>%
mutate(forced_att = FSEXATT_AFT14) %>%
# sexual experience before 14 W_5
mutate(sex_bef14 = SEX_BEF14) %>%
# relation status L_1
mutate(relation1 = (MARSTAT != 1)) %>% # 1 for in-relation or separated, 0 for single
mutate(relation2 = RELATION2) %>%
mutate(relation3 = (RELSTAT3 != 1)) %>%
mutate(relation4 = (RELSTAT4 != 1)) %>%
mutate(relation5 = (RELSTAT5 != 1)) %>%
# religious preference L_2
mutate(religion1 = (RELINFL != 1)) %>% # 1 if religion has at least some
#influence on the way the subject choose to spend their time each day
mutate(religion2 = (RELINFL2 != 1)) %>%
mutate(religion3 = (RELINFL3 != 1)) %>%
mutate(religion4 = (RELINFL4 != 1)) %>%
mutate(religion5 = (RELINFL5 != 1)) %>%
# negative psychological quality L_3
mutate(psystress1 = PSYSTRES) %>% # continuous
mutate(psystress2 = PSYSTRS2) %>%
mutate(psystress3 = PSYSTRS3) %>%
mutate(psystress4 = PSYSTRS4) %>%
mutate(psystress5 = PSYSTRS5) %>%
# positive psychological quality L_4
mutate(psywell1 = PSYWELL) %>% # continuous
mutate(psywell2 = PSYWELL2) %>%
mutate(psywell3 = PSYWELL3) %>%
mutate(psywell4 = PSYWELL4) %>%
mutate(psywell5 = PSYWELL5) %>%
# number of women the respondent know who had been sexually victimized L_5
mutate(victfrnd1 = (VICTFRND != 1)) %>% # 1 for at least one, 0 for none
mutate(victfrnd2 = (VCTFRND2 != 1)) %>%
mutate(victfrnd3 = (VCTFRND3 != 1)) %>%
mutate(victfrnd4 = (VCTFRND4 != 1)) %>%
mutate(victfrnd5 = (NUMVICT5 != 1)) %>%
# drug use of the respondent L_6
mutate(drug1 = DRUG1) %>% # 1 for drug use, 0 for none
mutate(drug2 = DRUG2) %>%
mutate(drug3 = DRUG3) %>%
mutate(drug4 = DRUG4) %>%
mutate(drug5 = DRUG5) %>%
# alcohol use of the respondent L_7
mutate(alcohol1 = (DRNKFREQ != 1)) %>% # 1 for alcohol use, 0 for none
mutate(alcohol2 = (DRNKFRQ2 != 1)) %>%
mutate(alcohol3 = (DRNKFRQ3 != 1)) %>%
mutate(alcohol4 = (DRNKFRQ4 != 1)) %>%
mutate(alcohol5 = (DRNKFRQ5 != 1))
# export CSV file
SCM_nodes <- c("victim1", "victim2", "victim3", "victim4", "suicide1",
"suicide2", "suicide3", "suicide4", "suicide5", "Y", "race",
"sxorient", "consent", "forced", "forced_att", "sex_bef14",
"relation1", "relation2", "relation3", "relation4", "relation5",
"religion1", "religion2", "religion3", "religion4", "religion5",
#"psystress1", "psystress2", "psystress3", "psystress4",
#"psystress5",
"psywell1", "psywell2", "psywell3", "psywell4",
"psywell5", "victfrnd1", "victfrnd2", "victfrnd3", "victfrnd4",
"victfrnd5", "drug1", "drug2", "drug3", "drug4", "drug5",
"alcohol1", "alcohol2", "alcohol3", "alcohol4", "alcohol5")
female_SCM <- female_final[, c("CODENUM", "cohort", SCM_nodes)]
write.table(female_SCM, "../data/female_SCM.csv")
save(female_SCM, file = "../data/female_SCM.RData")
setwd("~/Documents/GitHub/longitudinal_violence_study/eda")
## Baseline covariates
W <- c(
'race', 'sxorient', 'consent', 'forced', 'forced_att',
'sex_bef14', 'suicide1', 'relation1', 'religion1', 'psywell1',
'victfrnd1', 'drug1', 'alcohol1'
)
## Variables in time ordering:
T1 <- c(
'victim1',
'suicide2', 'relation2', 'religion2', 'psywell2',
'victfrnd2', 'drug2', 'alcohol2'
)
T2 <- c(
'victim2',
'suicide3', 'relation3', 'religion3', 'psywell3',
'victfrnd3', 'drug3', 'alcohol3'
)
T3 <- c(
'victim3',
'suicide4', 'relation4', 'religion4', 'psywell4',
'victfrnd4', 'drug4', 'alcohol4'
)
T4 <- c('victim4', 'Y')
time_order <- c(
W, T1, T2, T3, T4
)
## Add censoring nodes
female_SCM <- female_SCM %>%
`[`(time_order)
compute_censoring <- function(t = 1) {
sapply(
1:nrow(female_SCM),
function(row) {
first_covar <- which(names(female_SCM) == paste0('victim', t))
as.numeric(all(is.na(female_SCM[row, first_covar:ncol(female_SCM)])))
}
)
}
C1 <- compute_censoring(1)
C2 <- compute_censoring(2)
C3 <- compute_censoring(3)
C4 <- compute_censoring(4)
female_SCM <- cbind(
female_SCM[, W], C1,
female_SCM[, T1], C2,
female_SCM[, T2], C3,
female_SCM[, T3], C4,
female_SCM[, T4]
)
colnames(female_SCM)
library(tidyverse)
rm(list=setdiff(ls(), "female_SCM"))
# remove any individuals with missing value in the first survey
female_SCM_try <- female_SCM %>%
drop_na(race, sxorient, consent, forced, forced_att, sex_bef14)
apply(female_SCM, 2, function(t){sum(is.na(t)))
apply(female_SCM, 2, function(t){sum(is.na(t))})
apply(female_SCM_try, 2, function(t){sum(is.na(t))})
apply(female_SCM, 2, function(t){sum(is.na(t))})
colSums(female_SCM[, c("C1", "C2", "C3", "C4")])
colSums(female_SCM_try[, c("C1", "C2", "C3", "C4")])
apply(female_SCM_try, 2, function(t){sum(is.na(t))})
apply(female_SCM, 2, function(t){sum(is.na(t))})
# remove any individuals with missing value in the first survey
female_SCM_try <- female_SCM %>%
drop_na(race, sxorient, consent, forced, forced_att, sex_bef14, relation1,
drug1, alcohol1)
colnames(female_SCM)
apply(female_SCM, 2, function(t){sum(is.na(t))})
apply(female_SCM_try, 2, function(t){sum(is.na(t))})
colSums(female_SCM[, c("C1", "C2", "C3", "C4")])
colSums(female_SCM_try[, c("C1", "C2", "C3", "C4")])
# remove any individuals with missing value in the first survey
female_SCM_try <- female_SCM %>%
drop_na(race, sxorient, consent, forced, forced_att, sex_bef14, relation1,
drug1, alcohol1, victim1)
colnames(female_SCM)
apply(female_SCM, 2, function(t){sum(is.na(t))})
apply(female_SCM_try, 2, function(t){sum(is.na(t))})
save(female_SCM, file='../data/female_SCM_censoring.RData')
apply(female_SCM_try, 2, function(t){sum(is.na(t))})
which(is.na(suicide2))
which(is.na(female_SCM_try$suicide2))
# remove any individuals with missing value in the first survey
female_SCM <- female_SCM %>%
drop_na(race, sxorient, consent, forced, forced_att, sex_bef14, relation1,
drug1, alcohol1, victim1)
rm(female_SCM_try)
colnames(female_SCM)
apply(female_SCM, 2, function(t){sum(is.na(t))})
colSums(female_SCM[, c("C1", "C2", "C3", "C4")])
which(is.na(female_SCM$suicide2))
female_SCM[which(is.na(female_SCM$suicide2)), "suicide1"]
colnames(female_SCM)
data <- female_SCM
colnames(data[, c(16:22, 24:31, 33:40, 42)])
t=16
index <- which(is.na(data[, t]))
data[, t-9] == TRUE
data[, t-9]
data[, t-9] == TRUE
?rbinom
data(data[, t-9], t)
data(data[, t-9] == T, t)
data[data[, t-9] == T, t]
data[data[!index, t-9] == T, t]
data[data[-index, t-9] == T, t]
data[-index, t-9]
data[-index, t]
sum(is.na(data[-index, t]))
data[data[-index, t-9] == T, t]
sum(data[, t] == T & data[, t-9] == T)
sum(data[, t] == T & data[, t-9] == T, na.rm = T)
sum(data[, t] == T & data[, t-9] == T, na.rm = T)/sum(data[, t-9] == T, na.rm = T)
rbinom(1, 1, prob)
prob <- sum(data[, t] == T & data[, t-9] == T, na.rm = T)/sum(data[, t-9] == T, na.rm = T)
rbinom(1, 1, prob)
rbinom(100, 1, prob)
rbinom(1, 1, prob)
rbinom(length(index), 1, prob)
index <- which(is.na(data[, t]) & data[, t-9] == T)
index
length(index)
index <- which(is.na(data[, t]) & data[, t-9] == T)
prob <- sum(data[, t] == T & data[, t-9] == T, na.rm = T)/sum(data[, t-9] == T, na.rm = T)
data[index, t] <- rbinom(length(index), 1, prob)
data[, t]
F_index <- which(is.na(data[, t]) & data[, t-9] == F)
F_prob <- sum(data[, t] == T & data[, t-9] == F, na.rm = T)/sum(data[, t-9] == F, na.rm = T)
data[F_index, t] <- rbinom(length(F_index), 1, F_prob)
sum(is.na(data[, t]))
apply(16:22, function(t){
T_index <- which(is.na(data[, t]) & data[, t-9] == T)
T_prob <- sum(data[, t] == T & data[, t-9] == T, na.rm = T)/sum(data[, t-9] == T, na.rm = T)
data[T_index, t] <- rbinom(length(T_index), 1, T_prob)
F_index <- which(is.na(data[, t]) & data[, t-9] == F)
F_prob <- sum(data[, t] == T & data[, t-9] == F, na.rm = T)/sum(data[, t-9] == F, na.rm = T)
data[F_index, t] <- rbinom(length(F_index), 1, F_prob)
})
for(t in 16:22){
T_index <- which(is.na(data[, t]) & data[, t-9] == T)
T_prob <- sum(data[, t] == T & data[, t-9] == T, na.rm = T)/sum(data[, t-9] == T, na.rm = T)
data[T_index, t] <- rbinom(length(T_index), 1, T_prob)
F_index <- which(is.na(data[, t]) & data[, t-9] == F)
F_prob <- sum(data[, t] == T & data[, t-9] == F, na.rm = T)/sum(data[, t-9] == F, na.rm = T)
data[F_index, t] <- rbinom(length(F_index), 1, F_prob)
}
which(is.na(data$suicide2))
apply(female_SCM, 2, function(t){sum(is.na(t))})
apply(data, 2, function(t){sum(is.na(t))})
data <- female_SCM
apply(data, 2, function(t){sum(is.na(t))})
for(t in c(16:18, 20:22)){
T_index <- which(is.na(data[, t]) & data[, t-9] == T)
T_prob <- sum(data[, t] == T & data[, t-9] == T, na.rm = T)/sum(data[, t-9] == T, na.rm = T)
data[T_index, t] <- rbinom(length(T_index), 1, T_prob)
F_index <- which(is.na(data[, t]) & data[, t-9] == F)
F_prob <- sum(data[, t] == T & data[, t-9] == F, na.rm = T)/sum(data[, t-9] == F, na.rm = T)
data[F_index, t] <- rbinom(length(F_index), 1, F_prob)
}
apply(data, 2, function(t){sum(is.na(t))})
colnames(female_SCM)
data <- female_SCM
for(t in c(16:18, 20:22, 24)){
T_index <- which(is.na(data[, t]) & data[, t-9] == T)
T_prob <- sum(data[, t] == T & data[, t-9] == T, na.rm = T)/sum(data[, t-9] == T, na.rm = T)
data[T_index, t] <- rbinom(length(T_index), 1, T_prob)
F_index <- which(is.na(data[, t]) & data[, t-9] == F)
F_prob <- sum(data[, t] == T & data[, t-9] == F, na.rm = T)/sum(data[, t-9] == F, na.rm = T)
data[F_index, t] <- rbinom(length(F_index), 1, F_prob)
}
apply(data, 2, function(t){sum(is.na(t))})
colnames(data)
for(t in c(25:27, 29:31, 33)){
T_index <- which(is.na(data[, t]) & (data[, t-9] == T | data[, t-18] == T))
T_prob <- sum(data[, t] == T & (data[, t-9] == T | data[, t-18] == T),
na.rm = T) / sum(data[, t-9] == T | data[, t-18] == T, na.rm = T)
data[T_index, t] <- rbinom(length(T_index), 1, T_prob)
F_index <- which(is.na(data[, t]) & data[, t-9] == F & data[, t-18] == F)
F_prob <- sum(data[, t] == T & data[, t-9] == F & data[, t-18] == F,
na.rm = T)/sum(data[, t-9] == F & data[, t-18] == F, na.rm = T)
data[F_index, t] <- rbinom(length(F_index), 1, F_prob)
}
apply(data, 2, function(t){sum(is.na(t))})
colnames(data)
for(t in c(34:36, 38:40, 42)){
T_index <- which(is.na(data[, t]) & (data[, t-9] == T | data[, t-18] == T | data[, t-27] == T))
T_prob <- sum(data[, t] == T & (data[, t-9] == T | data[, t-18] == T | data[, t-27] == T),
na.rm = T) / sum(data[, t-9] == T | data[, t-18] == T | data[, t-27] == T, na.rm = T)
data[T_index, t] <- rbinom(length(T_index), 1, T_prob)
F_index <- which(is.na(data[, t]) & data[, t-9] == F & data[, t-18] == F & data[, t-27] == F)
F_prob <- sum(data[, t] == T & data[, t-9] == F & data[, t-18] == F & data[, t-27] == F,
na.rm = T)/sum(data[, t-9] == F & data[, t-18] == F & data[, t-27] == F, na.rm = T)
data[F_index, t] <- rbinom(length(F_index), 1, F_prob)
}
apply(data, 2, function(t){sum(is.na(t))})
colnames(data)
grep(colnamea(data), "^psywell")
grep(colnames(data), "^psywell")
grep("^psywell", colnames(data))
col_index <- grep("^psywell", colnames(data))
for(i in col_index){
data[which(is.na(data[, i])), i] <- colMeans(data[, i], na.rm = T)
}
i=10
colMeans(data[, i], na.rm = T)
colMeans(data, na.rm = T)[i]
col_index <- grep("^psywell", colnames(data))
for(i in col_index){
data[which(is.na(data[, i])), i] <- colMeans(data, na.rm = T)[i]
}
apply(data, 2, function(t){sum(is.na(t))})
as.numeric(data[1, c(7, 16, 25, 34)])
# Y
data[, "Y"] <- sum(as.numeric(data[, c(7, 16, 25, 34)]))
# Y
apply(t, 1, function(t){data[t, "Y"] <- sum(as.numeric(data[t, c(7, 16, 25, 34)]))})
t=1
sum(as.numeric(data[t, c(7, 16, 25, 34)]))
data[t, "Y"]
# Y
apply(t, 1, function(t){data[t, "Y"] <- sum(as.numeric(data[t, c(7, 16, 25, 34)]))})
# Y
sapply(t, function(t){data[t, "Y"] <- sum(as.numeric(data[t, c(7, 16, 25, 34)]))})
data <- female_SCM
# time point 2
for(t in c(16:18, 20:22, 24)){
T_index <- which(is.na(data[, t]) & data[, t-9] == T)
T_prob <- sum(data[, t] == T & data[, t-9] == T, na.rm = T)/sum(data[, t-9] == T, na.rm = T)
data[T_index, t] <- rbinom(length(T_index), 1, T_prob)
F_index <- which(is.na(data[, t]) & data[, t-9] == F)
F_prob <- sum(data[, t] == T & data[, t-9] == F, na.rm = T)/sum(data[, t-9] == F, na.rm = T)
data[F_index, t] <- rbinom(length(F_index), 1, F_prob)
}
# time point 3
for(t in c(25:27, 29:31, 33)){
T_index <- which(is.na(data[, t]) & (data[, t-9] == T | data[, t-18] == T))
T_prob <- sum(data[, t] == T & (data[, t-9] == T | data[, t-18] == T),
na.rm = T) / sum(data[, t-9] == T | data[, t-18] == T, na.rm = T)
data[T_index, t] <- rbinom(length(T_index), 1, T_prob)
F_index <- which(is.na(data[, t]) & data[, t-9] == F & data[, t-18] == F)
F_prob <- sum(data[, t] == T & data[, t-9] == F & data[, t-18] == F,
na.rm = T)/sum(data[, t-9] == F & data[, t-18] == F, na.rm = T)
data[F_index, t] <- rbinom(length(F_index), 1, F_prob)
}
# time point 4
for(t in c(34:36, 38:40, 42)){
T_index <- which(is.na(data[, t]) & (data[, t-9] == T | data[, t-18] == T | data[, t-27] == T))
T_prob <- sum(data[, t] == T & (data[, t-9] == T | data[, t-18] == T | data[, t-27] == T),
na.rm = T) / sum(data[, t-9] == T | data[, t-18] == T | data[, t-27] == T, na.rm = T)
data[T_index, t] <- rbinom(length(T_index), 1, T_prob)
F_index <- which(is.na(data[, t]) & data[, t-9] == F & data[, t-18] == F & data[, t-27] == F)
F_prob <- sum(data[, t] == T & data[, t-9] == F & data[, t-18] == F & data[, t-27] == F,
na.rm = T)/sum(data[, t-9] == F & data[, t-18] == F & data[, t-27] == F, na.rm = T)
data[F_index, t] <- rbinom(length(F_index), 1, F_prob)
}
# continuous variable
col_index <- grep("^psywell", colnames(data))
for(i in col_index){
data[which(is.na(data[, i])), i] <- colMeans(data, na.rm = T)[i]
}
# Y
data_new <- data %>%
mutate(Y = as.numeric(suicide1) + as.numeric(suicide2) + as.numeric(suicide3) +
as.numeric(suicide4))
apply(data, 2, function(t){sum(is.na(t))})
apply(data_new, 2, function(t){sum(is.na(t))})
# Y
data <- data %>%
mutate(Y = as.numeric(suicide1) + as.numeric(suicide2) + as.numeric(suicide3) +
as.numeric(suicide4))
apply(data, 2, function(t){sum(is.na(t))})
female_SCM <- data
save(female_SCM, file='../data/female_SCM_imputed.RData')
table(female_SCM)
table(female_SCM[, 1:5])
table(female_SCM[, "Y"])
F_prob
T_prob
